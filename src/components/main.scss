$body-bg: #fff;

// Shadows
$shadow-inset: inset 0 2px 2px 0 rgba(0,0,0,.14);
$shadow-0: 0 0 1px rgba(0, 0, 0, 0);
$shadow-2: 0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);
$shadow-3: 0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.2),0 1px 8px 0 rgba(0,0,0,.12);
$shadow-4: 0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2);
$shadow-6: 0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12),0 3px 5px -1px rgba(0,0,0,.2);
$shadow-8: 0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.2);

// Font Sizes
$mf-font-size: 1rem !default;
$mf-active-font-size: $mf-font-size * 0.8 !default;
$mf-active-top: -$mf-font-size !default;

// Margin & Paddings
$mf-gap: $mf-font-size * 1.5 !default;
$mf-spacer: $mf-font-size / 8 !default;
$mf-fieldset-margin: 0 0 $mf-gap * 2 !default;
$mf-checkbox-gap: $mf-font-size * 2 !default;
$mf-checkbox-top: 0 !default;
$mf-radio-margin: $mf-font-size / -4 !default;

// Colors
$mf-input-color: #333 !default;
$mf-border-color: #999 !default;
$mf-label-color: lighten($mf-border-color, 10%) !default;
$mf-active-color: darken($mf-border-color, 10%) !default;
$mf-focus-color: #337ab7 !default;
$mf-error-color: #d9534f !default;

// Animation
$mf-transition-speed: 0.28s !default;

// Colours palette variable
$button-primary: #00c35c;
$button-secondary: #00ba99;
$button-disable: #ccc;		
$button-danger: #ff4040;																																																			









h5{
	font-family: "Gotham Normal", sans-serif;
}
.lbl-title{
	padding: 20px;
	background-color: #f0f0f0;
	font-family: "Gotham Normal", sans-serif;
	font-weight: normal;
	font-size: 2em;
	width: 100%;
}
.padding-remove{
	padding: 0 !important;
}















//Button design components
.button-ui{
	border: 2px solid;
	border-radius: 5px;
	padding: 15px 0;
	width: 150px;
	font-family: "Gotham Normal", sans-serif;
	font-weight: normal;
	font-size: 1em;
}
.button-ui:hover, .button-ui:focus{
	outline: 0;
}

.Primary-btn-solid{
	background-color: $button-primary;
	@extend .button-ui;
	color: #fff;
}
.Secondary-btn-solid{
	background-color: $button-secondary;
	@extend .button-ui;
	color: #fff;
}
.Disable-btn-solid{
	background-color: $button-disable;
	@extend .button-ui;
	color: #fff;
}
.Danger-btn-solid{
	background-color: $button-danger;
	@extend .button-ui;
	color: #fff;
}

// No Fill BUttons
.Primary-btn-NoFill{
	border-color: $button-primary;
	@extend .button-ui;
	background-color: transparent;
	color: $button-primary;
}
.Secondary-btn-NoFill{
	border-color: $button-secondary;
	@extend .button-ui;
	background-color: transparent;
	color: $button-secondary;
}
.Disable-btn-NoFill{
	border-color: $button-disable;
	@extend .button-ui;
	background-color: transparent;
	color: $button-disable;
}
.Danger-btn-NoFill{
	border-color: $button-danger;
	@extend .button-ui;
	background-color: transparent;
	color: $button-danger;
}
























// Radio & Checkedbox design Components
.form-radio,
.form-group {
	position: relative;
	margin-top: ($mf-gap * 1.5);
	margin-bottom: ($mf-gap * 1.5);
}

.form-inline {
	> .form-group,
	> .btn {
		display: inline-block;
		margin-bottom: 0;
	}
}

.form-help {
	margin-top: $mf-spacer;
	margin-left: $mf-spacer;
	color: $mf-label-color;
	font-size: $mf-active-font-size;

	.checkbox &,
	.form-radio &,
	.form-group & {
		position: absolute;
		width: 100%;
	}

	.checkbox & {
		position: relative;
		margin-bottom: $mf-font-size;
	}

	.form-radio & {
		padding-top: ($mf-spacer * 2);
		margin-top: -$mf-font-size;
	}
}

.form-group {
	// scss-lint:disable QualifyingElement, NestingDepth
	input {
		height: ($mf-font-size * 1.9);
	}

	.control-label {
		position: absolute;
		top: ($mf-font-size / 4);
    	left: 5px;
		pointer-events: none;
		padding-left: $mf-spacer;
		z-index: 1;
		color: $mf-label-color;
		font-size: $mf-font-size;
		font-weight: normal;
		transition: all $mf-transition-speed ease;
	}

	.bar {
		position: absolute;
	    left: 0;
	    right: 0;
	    top: 0;
	    bottom: 0;
		border: ($mf-font-size / 16) solid $mf-border-color;
	    pointer-events: none;
	    transition: border-color $mf-transition-speed ease;
	}

	input {
		display: block;
		background: none;
		padding: $mf-spacer ($mf-spacer + 0.4) ($mf-spacer / 2);
		font-size: $mf-font-size;
		border-width: 0;
		border-color: transparent;
		line-height: 1.9;
		width: 100%;
		color: transparent;
		transition: all $mf-transition-speed ease;
		box-shadow: none;
	}

	input:focus,
	input:valid,
	input.form-file,
	input.has-value {
		color: $mf-input-color;

		~ .control-label {
      background: #fff;
      padding-left: 2px;
      padding-right: 2px;
			font-size: $mf-active-font-size;
			color: $mf-active-color;
			top: $mf-active-top + 0.5;
			left: 5px;
		}
	}

	input {
		&:focus {
			outline: none;

			~ .control-label {
				color: $mf-focus-color;
			} 

			~ .bar {
        		border-color: $mf-focus-color;
			}
		}
	}
}


// Radio & Checkbox
.checkbox,
.form-radio {
	label {
		position: relative;
		cursor: pointer;
		padding-left: 3rem;
		text-align: left;
		color: $mf-input-color;
		display: block;
		font-family: "Gotham", sans-serif;
	}

	input {
		width: auto;
		opacity: 0.00000001;
		position: absolute;
		left: 0;
	}
}

.radio {
	margin-bottom: $mf-font-size;

	.helper {
		position: absolute;
		top: $mf-radio-margin;
		left: $mf-radio-margin;
		cursor: pointer;
		display: block;
		font-size: $mf-font-size;
		user-select: none;
		color: $mf-border-color;

		&::before,
		&::after {
			content: '';
			position: absolute;
			left: 0;
			top: 0;
			margin: ($mf-spacer * 2);
			width: 20px;
			height: 20px;
			transition: transform $mf-transition-speed ease;
			border-radius: 50%;
			border: ($mf-font-size / 8) solid currentColor;
		}

		&::after {
			transform: scale(0);
			background-color: $mf-focus-color;
			border-color: $mf-focus-color;
		}
	}

	label:hover .helper {
		color: $mf-focus-color;
	}

	// scss-lint:disable QualifyingElement, NestingDepth
	input:checked {
		~ .helper {
			&::after {
					transform: scale(0.5);
			}
			&::before {
				color: $mf-focus-color;
			}
		}
	}
}

.checkbox {
	// scss-lint:disable QualifyingElement
	
	margin-top: ($mf-gap * 2);
	margin-bottom: $mf-font-size;
	
	.helper {
		color: $mf-border-color;
		position: absolute;
		top: $mf-checkbox-top;
		left: 0;
		width: 20px;
		height: 20px;
		z-index: 0;
		border: ($mf-font-size / 8) solid currentColor;
		border-radius: ($mf-font-size / 16);
		transition: border-color $mf-transition-speed ease;
		
		&::before,
		&::after {
			position: absolute;
			height: 0;
			width: (1rem * 0.2);
			background-color: $mf-focus-color;
			display: block;
			transform-origin: left top;
			border-radius: ($mf-font-size / 4);
			content: '';
			transition: opacity $mf-transition-speed ease, height 0s linear $mf-transition-speed;
			opacity: 0;
		}
		
		&::before {
			top: (2rem * 0.65);
			left: (2rem * 0.38);
			transform: rotate(-135deg);
			box-shadow: 0 0 0 ($mf-font-size / 16) $body-bg;
		}

		&::after {
			top: 0.7rem;
			left: 0.2rem;
			transform: rotate(-45deg);
		}
	}
	
	label:hover .helper {
		color: $mf-focus-color;
	}
	
	input:checked {
		~ .helper {
			color: $mf-focus-color;
			
			&::after,
			&::before {
				opacity: 1;
				transition: height $mf-transition-speed ease;
			}

			&::after {
				height: 0.8rem;
			}

			&::before {
				height: ($mf-font-size * 1.9);
				transition-delay: $mf-transition-speed;
			}
		}
	}
}

.radio + .radio,
.checkbox + .checkbox {
	margin-top: $mf-font-size;
}

.has-error {
	.legend.legend,
	&.form-group .control-label.control-label {
		// Prevent !importantRule
		color: $mf-error-color;
	}
	
	&.form-group,
	&.checkbox,
	&.radio,
	&.form-radio {
		.form-help,
		.helper {
			color: $mf-error-color;
		}
	}
	
	.bar {
		&::before {
			background: $mf-error-color;
			left: 0;
			width: 100%;
		}
	}
}

.button {
	position: relative;
	background: currentColor;
	border: 1px solid currentColor;
	font-size: ($mf-font-size * 1.1);
	color: lighten($mf-focus-color, 10%);
	margin:( $mf-gap * 2) 0;
	padding: ($mf-gap / 2) ($mf-gap * 2);
	cursor: pointer;
	transition: background-color $mf-transition-speed ease, color $mf-transition-speed ease, box-shadow $mf-transition-speed ease;
	overflow: hidden;
	box-shadow: $shadow-2;
	
	span {
		color: #fff;
		position: relative;
		z-index: 1;
	}
	
	&::before {
		content: '';
		position: absolute;
		background: darken($mf-focus-color, 40%);
		border: 50vh solid darken($mf-focus-color, 20%);
		width: 30vh;
		height: 30vh;
		border-radius: 50%;
		display: block;
		top: 50%;
		left: 50%;
		z-index: 0;
		opacity: 1;
		transform: translate(-50%, -50%) scale(0);
	}
	
	&:hover {
		color: $mf-focus-color;
		box-shadow: $shadow-6;
	}
	
	&:active,
	&:focus {
		&::before {
			transition: transform ($mf-transition-speed * 4) ease, opacity $mf-transition-speed ease ($mf-transition-speed * 1.3);
			transform: translate(-50%, -50%) scale(1);
			opacity: 0;
		}
	}
	
	&:focus {
		outline: none;
	}
}















//SearchBar design component

input#search-bar{
  margin: 0 auto;
  width: 100%;
  height: 45px;
  padding: 0 20px;
  font-size: 1em;
  border: 1px solid #D0CFCE;
  font-family: "Gotham Book", sans-serif;
  outline: none;
  &:focus{
    border: 1px solid #008ABF;
    transition: $mf-transition-speed;
    color: #008ABF;
    &::-webkit-input-placeholder{
      transition: opacity $mf-transition-speed; 
  	  opacity: 0;
     }
    &::-moz-placeholder {
      transition: opacity $mf-transition-speed; 
  	  opacity: 0;
     }
    &:-ms-placeholder {
     transition: opacity $mf-transition-speed; 
  	 opacity: 0;
     }    
   }
 }

.search-icon{
  position: relative;
  float: right;
  width: 50px;
  height: 50px;
  top: -50px;
  right: 0;
}






//Input fields design components
// Effect Styles Start Here
%label-movement {
  // Move up, colorize and shrink
  font-size: 0.75em;
  color: #8e44ad;
  top: -2.25rem;
  transition: all 0.125s cubic-bezier(0.2, 0, 0.03, 1);
}

.styled-input {
  float: left;
  width: 33.3333%;
  margin: 2rem 0 1rem;
  position: relative;
  label {
    color: #999;
    padding: 1rem;
    position: absolute;
    font-family: "Gotham Book", sans-serif;
    top: 0;    
    left: 0;
    transition: all 0.25s cubic-bezier(0.2, 0, 0.03, 1);
    pointer-events: none;
  }
  &.wide {
    // Full width textarea fields
    width: 100%;
  }
}

input, textarea {
  padding: 1rem 1rem;
  border: 0; 
  width: 100%;
  font-size: 1rem;
  ~ span {
    // Border Effect
    display: block;
    width: 0;
    height: 3px;
    background: #8e44ad;
    position: absolute;
    bottom: 0;
    left: 0;
    transition: all 0.125s cubic-bezier(0.2, 0, 0.03, 1);
  }
  &:focus {
    // Trigger the effects
    outline: 0;
	  ~ label {
      // Move Label
      @extend %label-movement;
  	}
    ~ span {
      // Expand across
      width: 100%;
      transition: $mf-transition-speed cubic-bezier(0.2, 0, 0.03, 1);
    }
	}
  &:valid ~ label/*, &.not-empty ~ label*/ {
    // Keep label above field after its filled out
    @extend %label-movement;
  }
}

textarea {
  // Mods needed for multiline inputs
  width: 100%;
  min-height: 15em;
}